
# Задание - 1
# Создайте функцию, принимающую на вход Имя, возраст и город проживания человека
# Функция должна возвращать строку вида "Василий, 21 год(а), проживает в городе Москва"

def data ():
    text="{}, {} год(а), проживает в городе {}"
    name = input('введите имя')
    age = input ('введите возраст')
    city = input ('введитеy город')
    print(text.format(name,age, city))
    return (name,age, city)
data()
# Задание - 2
# Создайте функцию, принимающую на вход 3 числа, и возвращающую наибольшее из них
def max_number ():
    a= int(input('введите первое число'))
    b= int(input('введите первое число'))
    d= int(input('введите третие число'))
    print(max(a,b,d))
max_number()
# Задание - 3
# Создайте функцию, принимающую неограниченное количество строковых аргументов,
# верните самую длинную строку из полученных аргументов


def strings(*text):
    empty_list1 = []
    empty_list2 = []
    empty_dict = {}
    while True:
        text = input("введите текстю если хотите закончить вводить нажмите 1")
        a=len(text)
        empty_list1.append(a)
        empty_list2.append([text])
        empty_dict[a]=text
        if text== '1':
            break
    empty_dict.pop(1)
    print('максимальное количество символов ', max(empty_list1), empty_dict.get(max(empty_list1)), empty_dict)
strings()
# Задание - 1
# Вам даны 2 списка одинаковой длины, в первом списке имена людей, во втором зарплаты,
# вам необходимо получить на выходе словарь, где ключ - имя, значение - зарплата.
# Запишите результаты в файл salary.txt так, чтобы на каждой строке было 2 столбца,
# столбцы разделяются пробелом, тире, пробелом. в первом имя, во втором зарплата, например: Vasya - 5000
# После чего прочитайте файл, выведите построчно имя и зарплату минус 13% (налоги ведь),
# Есть условие, не отображать людей получающих более зарплату 500000, как именно
#  выполнить условие решать вам, можете не писать в файл
# можете не выводить, подумайте какой способ будет наиболее правильным и оптимальным,
#  если скажем эти файлы потом придется передавать.
# Так же при выводе имя должно быть полностью в верхнем регистре!
# Подумайте вспоминая урок, как это можно сделать максимально кратко, используя возможности языка Python.
names=['ivan', 'maria', 'olga', 'katya', 'john', 'bob', 'chi', 'egor']
salary= [30000, 45000, 80000, 30000, 450000, 75000, 45000, 555000]
inform_list=dict(zip(names, salary))
file=open('salary.txt', 'w')
for key in inform_list:
    name=key.title()
    sal=inform_list[key]
    if  sal<500000:
        file.write ('{}  -  {}\n'.format(name, sal))
# Задание - 1
# Давайте опишем пару сущностей player и enemy через словарь,
# который будет иметь ключи и значения:
# name - строка полученная от пользователя,
# health - 100,
# damage - 50.
# Поэксперементируйте с значениями урона и жизней по желанию.
# Теперь надо создать функцию attack(person1, persoтn2), аргументы можете указать свои,
# функция в качестве аргумента будет принимать атакующего и атакуемого,
# функция должна получить параметр damage атакующего и отнять это количество
# health от атакуемого. Функция должна сама работать с словарями и изменять их значения.
import random

player={'name':input("введите имя"),'health':100, 'damage':20}
enemy= {'name':"Соловей-разбойник",'health':100, 'damage':20}

def attack_player():
    dodge_chance = random.randrange(0, 100)
    if dodge_chance <= 15 :
        print('вот это уворот')
    else:
        player['health']=player['health']-enemy['damage']
        print('ай как больно')
def attack_enemy():
    dodge_chance = random.randrange(0, 100)
    if dodge_chance <= 15 :
        print('он увернулся')
    else:
        enemy['health']=enemy['health']-player['damage']
        print('прямо в лоб')
while player['health']!=0 or enemy['health']!=0:
    attack_player()
    if player['health']==0:
        print('враг победил')
        break
    attack_enemy()
    if enemy['health']==0:
        print ('вы выйграли')
        break

print("у вас остальсь",player['health'], " здоровья","у врага осталось", enemy['health'], "здоровья")

